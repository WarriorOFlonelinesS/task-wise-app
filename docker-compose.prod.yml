version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app_prod
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://yourdomain.com
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - LOG_CHANNEL=stack
      - LOG_LEVEL=error
    volumes:
      - ./backend:/var/www
      - vendor-data:/var/www/vendor
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped

  web:
    image: nginx:alpine
    container_name: nginx_web_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./nginx/conf.d/production.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis_server_prod
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend_prod
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - app
    restart: unless-stopped

volumes:
  vendor-data:
  redis-data:

networks:
  app-network:
    driver: bridge